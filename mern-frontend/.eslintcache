[{"D:\\react_projects\\mern_stack\\mern-frontend\\src\\index.js":"1","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reportWebVitals.js":"2","D:\\react_projects\\mern_stack\\mern-frontend\\src\\App.js":"3","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\ViewTodos.js":"4","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\EditTodo.js":"5","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Login\\Login.js":"7","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Register\\Register.js":"8","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Home.js":"9","D:\\react_projects\\mern_stack\\mern-frontend\\src\\store.js":"10","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\index.js":"11","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\authReducers.js":"12","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\errorReducers.js":"13","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\types.js":"14","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\authActions.js":"15","D:\\react_projects\\mern_stack\\mern-frontend\\src\\utils\\authToken.js":"16","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Dashboard\\Dashboard.js":"17","D:\\react_projects\\mern_stack\\mern-frontend\\src\\PrivateRoute.js":"18","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\todoReducers.js":"19","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\todoActions.js":"20","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Dashboard\\SidebarNav.js":"21","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Deal\\Deal.jsx":"22","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Syndicate\\Syndicate.jsx":"23","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Bookmark\\Bookmark.jsx":"24","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\startupReducers.js":"25","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\startupActions.js":"26","D:\\react_projects\\mern_stack\\mern-frontend\\src\\global.js":"27","D:\\react_projects\\mern_stack\\mern-frontend\\src\\theme.js":"28"},{"size":614,"mtime":1610803324957,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":3237,"mtime":1610805179141,"results":"32","hashOfConfig":"30"},{"size":4303,"mtime":1608573333265,"results":"33","hashOfConfig":"30"},{"size":8017,"mtime":1608385288849,"results":"34","hashOfConfig":"30"},{"size":3019,"mtime":1610800791823,"results":"35","hashOfConfig":"30"},{"size":4179,"mtime":1609070083415,"results":"36","hashOfConfig":"30"},{"size":5467,"mtime":1609070067569,"results":"37","hashOfConfig":"30"},{"size":653,"mtime":1608626111905,"results":"38","hashOfConfig":"30"},{"size":327,"mtime":1610708860112,"results":"39","hashOfConfig":"30"},{"size":367,"mtime":1610708860112,"results":"40","hashOfConfig":"30"},{"size":558,"mtime":1610708860110,"results":"41","hashOfConfig":"30"},{"size":253,"mtime":1610708860111,"results":"42","hashOfConfig":"30"},{"size":223,"mtime":1610708860106,"results":"43","hashOfConfig":"30"},{"size":1466,"mtime":1610708860106,"results":"44","hashOfConfig":"30"},{"size":340,"mtime":1608711770668,"results":"45","hashOfConfig":"30"},{"size":5406,"mtime":1610802363589,"results":"46","hashOfConfig":"30"},{"size":615,"mtime":1609069848948,"results":"47","hashOfConfig":"30"},{"size":331,"mtime":1609612048286,"results":"48","hashOfConfig":"30"},{"size":366,"mtime":1609614508045,"results":"49","hashOfConfig":"30"},{"size":2227,"mtime":1610801304557,"results":"50","hashOfConfig":"30"},{"size":4173,"mtime":1610806115599,"results":"51","hashOfConfig":"30"},{"size":651,"mtime":1610365734046,"results":"52","hashOfConfig":"30"},{"size":650,"mtime":1610365821100,"results":"53","hashOfConfig":"30"},{"size":343,"mtime":1610367141139,"results":"54","hashOfConfig":"30"},{"size":354,"mtime":1610369172828,"results":"55","hashOfConfig":"30"},{"size":455,"mtime":1610805226557,"results":"56","hashOfConfig":"30"},{"size":297,"mtime":1610804156920,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1vloc6n",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react_projects\\mern_stack\\mern-frontend\\src\\index.js",[],["125","126"],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reportWebVitals.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\App.js",["127","128"],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\ViewTodos.js",["129","130"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ViewTodos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    this.editRouteHandler = this.editRouteHandler.bind(this);\r\n    this.deleteRouteHandler = this.deleteRouteHandler.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getTodoList();\r\n  }\r\n\r\n  editRouteHandler(item) {\r\n    this.props.history.push(`/edit/${item._id}`);\r\n  }\r\n\r\n  getTodoList = () => {\r\n    axios\r\n      .get(\"http://localhost:4000/todos\")\r\n      .then((res) => {\r\n        this.setState({\r\n          todos: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  deleteRouteHandler(item) {\r\n    axios\r\n      .delete(`http://localhost:4000/todos/delete/${item._id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.getTodoList();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <table className=\"table table-responsive table-striped table-hover table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Priority</th>\r\n                        <th scope=\"col\">Responsible</th>\r\n                        <th scope=\"col\">Completed</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.todos.length > 0 ? (\r\n                        <Fragment>\r\n                          {this.state.todos.map(function (todoList, id) {\r\n                            return (\r\n                              <tr key={id}>\r\n                                <td>{todoList._id}</td>\r\n                                <td>{todoList.todo_description}</td>\r\n                                <td>{todoList.todo_priority}</td>\r\n                                <td>{todoList.todo_responsible}</td>\r\n                                <td>\r\n                                  {todoList.todo_completed == 0\r\n                                    ? \"Uncomplete\"\r\n                                    : \"Complete\"}\r\n                                </td>\r\n                                <td>\r\n                                  <i\r\n                                    className=\"lni lni-pencil btn-sm text-primary\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={this.editRouteHandler.bind(\r\n                                      this,\r\n                                      todoList\r\n                                    )}\r\n                                  ></i>\r\n\r\n                                  <i\r\n                                    className=\"lni lni-trash btn-sm text-danger\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={this.deleteRouteHandler.bind(\r\n                                      this,\r\n                                      todoList\r\n                                    )}\r\n                                  ></i>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }, this)}\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Fragment>\r\n                          <tr>\r\n                            <td colSpan={6}>\r\n                              <center>No Data</center>\r\n                            </td>\r\n                          </tr>\r\n                        </Fragment>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\EditTodo.js",["131","132"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class EditTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id);\r\n    axios\r\n      .get(`http://localhost:4000/todos/${this.props.match.params.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          todo_description: res.data.todo_description,\r\n          todo_responsible: res.data.todo_responsible,\r\n          todo_priority: res.data.todo_priority,\r\n          todo_completed: res.data.todo_completed,\r\n        });\r\n      })\r\n      .catch((error) => console.log(console.error));\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let body = {\r\n      todo_description: this.state.todo_description,\r\n      todo_responsible: this.state.todo_responsible,\r\n      todo_completed: this.state.todo_completed,\r\n      todo_priority: this.state.todo_priority,\r\n    };\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/todos/update/${this.props.match.params.id}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"upper-form-container\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputdesc\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputdesc\"\r\n                      name=\"todo_description\"\r\n                      value={this.state.todo_description}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputresp\" className=\"form-label\">\r\n                      Responsible\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputresp\"\r\n                      name=\"todo_responsible\"\r\n                      value={this.state.todo_responsible}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inpupriority\" className=\"form-label\">\r\n                      Priority\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"low\"\r\n                        value=\"Low\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Low\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"low\">\r\n                        Low\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"medium\"\r\n                        value=\"Medium\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Medium\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"medium\">\r\n                        Medium\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"high\"\r\n                        value=\"High\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"High\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"high\">\r\n                        High\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label for=\"inputcomplete\" className=\"form-label\">\r\n                      Completed\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"yes\"\r\n                        value=\"1\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 1 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"yes\">\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"no\"\r\n                        value=\"0\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 0 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"no\">\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary\"\r\n                      onClick={(e) => this.submitHandler(e)}\r\n                      disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading ? (\r\n                        <Fragment>\r\n                          <span\r\n                            class=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          &nbsp;&nbsp; Submitting...\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Fragment>Submit</Fragment>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTodo;\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Navbar\\Navbar.jsx",["133","134","135","136","137"],"import React, { Fragment, useState } from \"react\";\r\nimport \"./navbar.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, setCurrentUser } from \"../../actions/authActions\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\n\r\nexport const Avataar = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <span\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          color: \"#0d6efd\",\r\n          borderRadius: \"50%\",\r\n          padding: \"3px 9px\",\r\n        }}\r\n      >\r\n        {props.name.charAt(0).toUpperCase()}\r\n      </span>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Navbar = (props) => {\r\n  console.log(\"navbarprops\", props.defaultThemeValue);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [isDark, setIsDark] = useState(props.defaultThemeValue);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const themeToggle = (event) => {\r\n    setIsDark(event.target.checked);\r\n    props.themeHandler(event.target.checked);\r\n  };\r\n  const onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            MERN STACK APP\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <Toggle\r\n              className=\"DarkToggle ml-auto\"\r\n              checked={isDark}\r\n              onChange={(event) => themeToggle(event)}\r\n              icons={{ checked: \"🌙\", unchecked: \"🔆\" }}\r\n              aria-label=\"Dark mode\"\r\n            />\r\n            <form className=\"d-flex ml-auto\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  tag=\"a\"\r\n                  className=\"nav-link\"\r\n                  style={{ color: \"#fff\", cursor: \"pointer\" }}\r\n                >\r\n                  {props.name ? <Avataar name={props.name} /> : \"John Doe\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={onLogoutClick}>Log Out</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.auth.user.name,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, setCurrentUser })(Navbar);\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Login\\Login.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Register\\Register.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Home.js",["138"],"import React, { Component, Fragment } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {\" \"}\r\n        <div className=\"mt-5 text-center\">\r\n          Welcome to MERN stack app. Please{\" \"}\r\n          <span className=\"text-info\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </span>{\" \"}\r\n          or{\" \"}\r\n          <span className=\"text-info\">\r\n            <Link to=\"/register\">Register</Link>\r\n          </span>{\" \"}\r\n          to see auth implementation.\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\store.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\index.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\authReducers.js",["139"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initState = { loading: false, isAuthenticated: false, user: {} };\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\errorReducers.js",["140"],"import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\types.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\authActions.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\utils\\authToken.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Dashboard\\Dashboard.js",["141","142","143"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTodoList } from \"../../actions/todoActions\";\r\nimport Bookmark from \"../Bookmark/Bookmark\";\r\nimport Deal from \"../Deal/Deal\";\r\nimport Syndicate from \"../Syndicate/Syndicate\";\r\nimport SidebarNav from \"./SidebarNav\";\r\n\r\nexport class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerValue: \"Home\",\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodoList(this.props);\r\n    console.log(this.props.isDarkTheme);\r\n  }\r\n\r\n  headerValueChange = (headerValueProps) => {\r\n    this.setState({\r\n      headerValue: headerValueProps,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoList } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-lg-2 col-md-2 col-sm-12 col-xs-12\"\r\n              style={{ padding: \"0\" }}\r\n            >\r\n              <SidebarNav headerChangeHandler={this.headerValueChange} />\r\n            </div>\r\n            <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n              {this.state.headerValue === \"Home\" && (\r\n                <div\r\n                  className={`card mt-5 ${\r\n                    this.props.isDarkTheme && \"custom_card_transparent_bg\"\r\n                  }`}\r\n                >\r\n                  <h5\r\n                    className={`card-header`}\r\n                    style={\r\n                      this.props.isDarkTheme\r\n                        ? { color: \"rgb(141, 141, 141)\" }\r\n                        : { color: \"#000\" }\r\n                    }\r\n                  >\r\n                    {this.state.headerValue !== \"Home\"\r\n                      ? this.state.headerValue\r\n                      : `Dashboard`}\r\n                  </h5>\r\n                  <div className=\"card-body\">\r\n                    {todoList != undefined ? (\r\n                      <Fragment>\r\n                        <table className=\"table table-responsive-lg table-responsive-md table-responsive-sm table-responsive-xs table-striped table-hover table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">#</th>\r\n                              <th scope=\"col\">Description</th>\r\n                              <th scope=\"col\">Priority</th>\r\n                              <th scope=\"col\">Responsible</th>\r\n                              <th scope=\"col\">Completed</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.props.todoList.length > 0 ? (\r\n                              <Fragment>\r\n                                {this.props.todoList.map(function (\r\n                                  todoList,\r\n                                  id\r\n                                ) {\r\n                                  return (\r\n                                    <tr key={id}>\r\n                                      <td>{todoList._id}</td>\r\n                                      <td>{todoList.todo_description}</td>\r\n                                      <td>{todoList.todo_priority}</td>\r\n                                      <td>{todoList.todo_responsible}</td>\r\n                                      <td>\r\n                                        {todoList.todo_completed == 0\r\n                                          ? \"Uncomplete\"\r\n                                          : \"Complete\"}\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                },\r\n                                this)}\r\n                              </Fragment>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <tr>\r\n                                  <td colSpan={6}>\r\n                                    <center>No Data</center>\r\n                                  </td>\r\n                                </tr>\r\n                              </Fragment>\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </Fragment>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <center>\r\n                          <p>Loading....</p>\r\n                        </center>\r\n                      </Fragment>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {this.state.headerValue === \"Deals\" && (\r\n                <Deal\r\n                  headerName={this.state.headerValue}\r\n                  isDark={this.props.isDarkTheme}\r\n                />\r\n              )}\r\n              {this.state.headerValue === \"Syndicate\" && (\r\n                <Syndicate headerName={this.state.headerValue} />\r\n              )}\r\n              {this.state.headerValue === \"Bookmark\" && (\r\n                <Bookmark headerName={this.state.headerValue} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  console.log(\"dashboard\", state),\r\n  {\r\n    todoList: state.todo.todo_list.data,\r\n  }\r\n);\r\nexport default connect(mapStateToProps, { getTodoList })(Dashboard);\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\PrivateRoute.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\todoReducers.js",["144"],"import { GET_TODOS } from \"../actions/types\";\r\n\r\nconst initState = { loading: false, todo_list: [] };\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        todo_list: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\todoActions.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Dashboard\\SidebarNav.js",["145"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./dashboard.scss\";\r\n\r\nconst SidebarNav = (props) => {\r\n  const [home, setHome] = useState(true);\r\n  const [deals, setDeals] = useState(false);\r\n  const [syndicate, setSyndicate] = useState(false);\r\n  const [bookmark, setBookmark] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    props.headerChangeHandler(event.target.id);\r\n    if (event.target.id === \"Home\") {\r\n      setHome(true);\r\n      setDeals(false);\r\n      setSyndicate(false);\r\n      setBookmark(false);\r\n    } else if (event.target.id === \"Deals\") {\r\n      setHome(false);\r\n      setDeals(true);\r\n      setSyndicate(false);\r\n      setBookmark(false);\r\n    } else if (event.target.id === \"Syndicate\") {\r\n      setHome(false);\r\n      setDeals(false);\r\n      setSyndicate(true);\r\n      setBookmark(false);\r\n    } else if (event.target.id === \"Bookmark\") {\r\n      setHome(false);\r\n      setDeals(false);\r\n      setSyndicate(false);\r\n      setBookmark(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-5 sidebar_parent_container\">\r\n        <ul>\r\n          <li\r\n            className={`mb-5 ${home && \"activeLink\"}`}\r\n            id=\"Home\"\r\n            onClick={handleChange}\r\n          >\r\n            <i className=\"lni lni-home\"></i>&nbsp;&nbsp;Home\r\n          </li>\r\n          {/* <Link to=\"/deals\"> */}\r\n          <li\r\n            className={`mb-5 ${deals && \"activeLink\"}`}\r\n            id=\"Deals\"\r\n            onClick={handleChange}\r\n          >\r\n            <i className=\"lni lni-money-location\"></i>&nbsp;&nbsp;Deals\r\n          </li>\r\n          {/* </Link> */}\r\n          <li\r\n            className={`mb-5 ${syndicate && \"activeLink\"}`}\r\n            id=\"Syndicate\"\r\n            onClick={handleChange}\r\n          >\r\n            <i className=\"lni lni-investment\"></i>&nbsp;&nbsp;Sydicate\r\n          </li>\r\n          <li\r\n            id=\"Bookmark\"\r\n            onClick={handleChange}\r\n            className={`${bookmark && \"activeLink\"}`}\r\n          >\r\n            <i className=\"lni lni-bookmark\"></i>&nbsp;&nbsp;Bookmarks\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarNav;\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Deal\\Deal.jsx",["146","147","148"],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Syndicate\\Syndicate.jsx",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Bookmark\\Bookmark.jsx",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\startupReducers.js",["149"],"import { GET_STARTUPS } from \"../actions/types\";\r\n\r\nconst initState = { loading: false, startup_list: [] };\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case GET_STARTUPS:\r\n      return {\r\n        ...state,\r\n        startup_list: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\startupActions.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\global.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\theme.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":17},{"ruleId":"154","severity":1,"message":"158","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":16},{"ruleId":"154","severity":1,"message":"159","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":79,"column":60,"nodeType":"162","messageId":"163","endLine":79,"endColumn":62},{"ruleId":"160","severity":1,"message":"161","line":167,"column":60,"nodeType":"162","messageId":"163","endLine":167,"endColumn":62},{"ruleId":"160","severity":1,"message":"161","line":181,"column":60,"nodeType":"162","messageId":"163","endLine":181,"endColumn":62},{"ruleId":"154","severity":1,"message":"159","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"164","line":9,"column":3,"nodeType":"156","messageId":"157","endLine":9,"endColumn":8},{"ruleId":"154","severity":1,"message":"165","line":35,"column":10,"nodeType":"156","messageId":"157","endLine":35,"endColumn":22},{"ruleId":"154","severity":1,"message":"166","line":37,"column":9,"nodeType":"156","messageId":"157","endLine":37,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":51,"column":11,"nodeType":"169","endLine":51,"endColumn":48},{"ruleId":"154","severity":1,"message":"170","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":7,"column":1,"nodeType":"173","endLine":23,"endColumn":2},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":10,"endColumn":2},{"ruleId":"160","severity":1,"message":"174","line":59,"column":31,"nodeType":"162","messageId":"163","endLine":59,"endColumn":33},{"ruleId":"160","severity":1,"message":"161","line":85,"column":66,"nodeType":"162","messageId":"163","endLine":85,"endColumn":68},{"ruleId":"175","severity":1,"message":"176","line":137,"column":34,"nodeType":"177","messageId":"178","endLine":137,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":5,"column":1,"nodeType":"173","endLine":15,"endColumn":2},{"ruleId":"154","severity":1,"message":"159","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"179","line":29,"column":21,"nodeType":"156","messageId":"157","endLine":29,"endColumn":33},{"ruleId":"160","severity":1,"message":"161","line":37,"column":28,"nodeType":"162","messageId":"163","endLine":37,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":110,"column":32,"nodeType":"177","messageId":"178","endLine":110,"endColumn":33},{"ruleId":"171","severity":1,"message":"172","line":5,"column":1,"nodeType":"173","endLine":15,"endColumn":2},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'ViewTodos' is defined but never used.","Identifier","unusedVar","'EditTodo' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Badge' is defined but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Route' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'startup_date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]