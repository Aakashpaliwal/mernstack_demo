[{"D:\\react_projects\\mern-frontend\\src\\index.js":"1","D:\\react_projects\\mern-frontend\\src\\reportWebVitals.js":"2","D:\\react_projects\\mern-frontend\\src\\App.js":"3","D:\\react_projects\\mern-frontend\\src\\components\\ViewTodos.js":"4","D:\\react_projects\\mern-frontend\\src\\components\\EditTodo.js":"5"},{"size":593,"mtime":1608369620279,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":472,"mtime":1608380396564,"results":"9","hashOfConfig":"7"},{"size":4303,"mtime":1608387112373,"results":"10","hashOfConfig":"7"},{"size":8017,"mtime":1608385288849,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1jk8vew",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\react_projects\\mern-frontend\\src\\index.js",[],["24","25"],"D:\\react_projects\\mern-frontend\\src\\reportWebVitals.js",[],"D:\\react_projects\\mern-frontend\\src\\App.js",[],"D:\\react_projects\\mern-frontend\\src\\components\\ViewTodos.js",["26","27"],"D:\\react_projects\\mern-frontend\\src\\components\\EditTodo.js",["28","29"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class EditTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id);\r\n    axios\r\n      .get(`http://localhost:4000/todos/${this.props.match.params.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          todo_description: res.data.todo_description,\r\n          todo_responsible: res.data.todo_responsible,\r\n          todo_priority: res.data.todo_priority,\r\n          todo_completed: res.data.todo_completed,\r\n        });\r\n      })\r\n      .catch((error) => console.log(console.error));\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let body = {\r\n      todo_description: this.state.todo_description,\r\n      todo_responsible: this.state.todo_responsible,\r\n      todo_completed: this.state.todo_completed,\r\n      todo_priority: this.state.todo_priority,\r\n    };\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/todos/update/${this.props.match.params.id}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"upper-form-container\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputdesc\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputdesc\"\r\n                      name=\"todo_description\"\r\n                      value={this.state.todo_description}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputresp\" className=\"form-label\">\r\n                      Responsible\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputresp\"\r\n                      name=\"todo_responsible\"\r\n                      value={this.state.todo_responsible}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inpupriority\" className=\"form-label\">\r\n                      Priority\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"low\"\r\n                        value=\"Low\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Low\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"low\">\r\n                        Low\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"medium\"\r\n                        value=\"Medium\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Medium\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"medium\">\r\n                        Medium\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"high\"\r\n                        value=\"High\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"High\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"high\">\r\n                        High\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label for=\"inputcomplete\" className=\"form-label\">\r\n                      Completed\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"yes\"\r\n                        value=\"1\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 1 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"yes\">\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"no\"\r\n                        value=\"0\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 0 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"no\">\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary\"\r\n                      onClick={(e) => this.submitHandler(e)}\r\n                      disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading ? (\r\n                        <Fragment>\r\n                          <span\r\n                            class=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          &nbsp;&nbsp; Submitting...\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Fragment>Submit</Fragment>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTodo;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":14},{"ruleId":"38","severity":1,"message":"39","line":79,"column":60,"nodeType":"40","messageId":"41","endLine":79,"endColumn":62},{"ruleId":"38","severity":1,"message":"39","line":167,"column":60,"nodeType":"40","messageId":"41","endLine":167,"endColumn":62},{"ruleId":"38","severity":1,"message":"39","line":181,"column":60,"nodeType":"40","messageId":"41","endLine":181,"endColumn":62},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]