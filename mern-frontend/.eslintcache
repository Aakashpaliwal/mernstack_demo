[{"D:\\react_projects\\mern_stack\\mern-frontend\\src\\index.js":"1","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reportWebVitals.js":"2","D:\\react_projects\\mern_stack\\mern-frontend\\src\\App.js":"3","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\ViewTodos.js":"4","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\EditTodo.js":"5","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Login\\Login.js":"7","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Register\\Register.js":"8","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Home.js":"9","D:\\react_projects\\mern_stack\\mern-frontend\\src\\store.js":"10","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\index.js":"11","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\authReducers.js":"12","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\errorReducers.js":"13","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\types.js":"14","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\authActions.js":"15","D:\\react_projects\\mern_stack\\mern-frontend\\src\\utils\\authToken.js":"16"},{"size":593,"mtime":1608369620279,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":975,"mtime":1608708617704,"results":"20","hashOfConfig":"18"},{"size":4303,"mtime":1608573333265,"results":"21","hashOfConfig":"18"},{"size":8017,"mtime":1608385288849,"results":"22","hashOfConfig":"18"},{"size":2002,"mtime":1608627894299,"results":"23","hashOfConfig":"18"},{"size":2398,"mtime":1608627545812,"results":"24","hashOfConfig":"18"},{"size":5246,"mtime":1608712592271,"results":"25","hashOfConfig":"18"},{"size":653,"mtime":1608626111905,"results":"26","hashOfConfig":"18"},{"size":327,"mtime":1608711354501,"results":"27","hashOfConfig":"18"},{"size":221,"mtime":1608709905330,"results":"28","hashOfConfig":"18"},{"size":558,"mtime":1608709686244,"results":"29","hashOfConfig":"18"},{"size":253,"mtime":1608709780530,"results":"30","hashOfConfig":"18"},{"size":139,"mtime":1608709174923,"results":"31","hashOfConfig":"18"},{"size":1464,"mtime":1608712528597,"results":"32","hashOfConfig":"18"},{"size":340,"mtime":1608711770668,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1vloc6n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\react_projects\\mern_stack\\mern-frontend\\src\\index.js",[],["74","75"],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reportWebVitals.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\App.js",["76","77"],"import \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport ViewTodos from \"./components/ViewTodos\";\nimport { Fragment } from \"react\";\nimport EditTodo from \"./components/EditTodo\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Home from \"./components/Home\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Provider store={store}>\n        <Navbar />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n        {/* <div className=\"text-center mb-5 mt-5\">MERN STACK TODOS</div>\n      <hr />\n      <Route path=\"/\" exact component={ViewTodos} />\n      <Route path=\"/edit/:id\" exact component={EditTodo} /> */}\n      </Provider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\ViewTodos.js",["78","79"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ViewTodos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    this.editRouteHandler = this.editRouteHandler.bind(this);\r\n    this.deleteRouteHandler = this.deleteRouteHandler.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getTodoList();\r\n  }\r\n\r\n  editRouteHandler(item) {\r\n    this.props.history.push(`/edit/${item._id}`);\r\n  }\r\n\r\n  getTodoList = () => {\r\n    axios\r\n      .get(\"http://localhost:4000/todos\")\r\n      .then((res) => {\r\n        this.setState({\r\n          todos: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  deleteRouteHandler(item) {\r\n    axios\r\n      .delete(`http://localhost:4000/todos/delete/${item._id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.getTodoList();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <table className=\"table table-responsive table-striped table-hover table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Priority</th>\r\n                        <th scope=\"col\">Responsible</th>\r\n                        <th scope=\"col\">Completed</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.todos.length > 0 ? (\r\n                        <Fragment>\r\n                          {this.state.todos.map(function (todoList, id) {\r\n                            return (\r\n                              <tr key={id}>\r\n                                <td>{todoList._id}</td>\r\n                                <td>{todoList.todo_description}</td>\r\n                                <td>{todoList.todo_priority}</td>\r\n                                <td>{todoList.todo_responsible}</td>\r\n                                <td>\r\n                                  {todoList.todo_completed == 0\r\n                                    ? \"Uncomplete\"\r\n                                    : \"Complete\"}\r\n                                </td>\r\n                                <td>\r\n                                  <i\r\n                                    className=\"lni lni-pencil btn-sm text-primary\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={this.editRouteHandler.bind(\r\n                                      this,\r\n                                      todoList\r\n                                    )}\r\n                                  ></i>\r\n\r\n                                  <i\r\n                                    className=\"lni lni-trash btn-sm text-danger\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={this.deleteRouteHandler.bind(\r\n                                      this,\r\n                                      todoList\r\n                                    )}\r\n                                  ></i>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }, this)}\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Fragment>\r\n                          <tr>\r\n                            <td colSpan={6}>\r\n                              <center>No Data</center>\r\n                            </td>\r\n                          </tr>\r\n                        </Fragment>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\EditTodo.js",["80","81"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class EditTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo_description: \"\",\r\n      todo_responsible: \"\",\r\n      todo_priority: \"\",\r\n      todo_completed: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id);\r\n    axios\r\n      .get(`http://localhost:4000/todos/${this.props.match.params.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          todo_description: res.data.todo_description,\r\n          todo_responsible: res.data.todo_responsible,\r\n          todo_priority: res.data.todo_priority,\r\n          todo_completed: res.data.todo_completed,\r\n        });\r\n      })\r\n      .catch((error) => console.log(console.error));\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let body = {\r\n      todo_description: this.state.todo_description,\r\n      todo_responsible: this.state.todo_responsible,\r\n      todo_completed: this.state.todo_completed,\r\n      todo_priority: this.state.todo_priority,\r\n    };\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/todos/update/${this.props.match.params.id}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"upper-form-container\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputdesc\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputdesc\"\r\n                      name=\"todo_description\"\r\n                      value={this.state.todo_description}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inputresp\" className=\"form-label\">\r\n                      Responsible\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputresp\"\r\n                      name=\"todo_responsible\"\r\n                      value={this.state.todo_responsible}\r\n                      onChange={(e) => this.changeHandler(e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label htmlFor=\"inpupriority\" className=\"form-label\">\r\n                      Priority\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"low\"\r\n                        value=\"Low\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Low\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"low\">\r\n                        Low\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"medium\"\r\n                        value=\"Medium\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"Medium\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"medium\">\r\n                        Medium\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"high\"\r\n                        value=\"High\"\r\n                        name=\"todo_priority\"\r\n                        checked={\r\n                          this.state.todo_priority === \"High\" ? true : false\r\n                        }\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"high\">\r\n                        High\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label for=\"inputcomplete\" className=\"form-label\">\r\n                      Completed\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"yes\"\r\n                        value=\"1\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 1 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"yes\">\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        id=\"no\"\r\n                        value=\"0\"\r\n                        name=\"todo_completed\"\r\n                        checked={this.state.todo_completed == 0 ? true : false}\r\n                        onChange={(e) => this.changeHandler(e)}\r\n                      />\r\n                      <label className=\"form-check-label\" for=\"no\">\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary\"\r\n                      onClick={(e) => this.submitHandler(e)}\r\n                      disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading ? (\r\n                        <Fragment>\r\n                          <span\r\n                            class=\"spinner-border spinner-border-sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          &nbsp;&nbsp; Submitting...\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Fragment>Submit</Fragment>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTodo;\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Navbar\\Navbar.jsx",["82","83","84","85","86"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            MERN STACK APP\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item ml-auto\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"></a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item ml-auto\">\r\n                  <Link to=\"/login\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                      Login\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item ml-auto\">\r\n                  <Link to=\"/register\">\r\n                    <a\r\n                      className=\"nav-link active\"\r\n                      aria-current=\"page\"\r\n                      href=\"#\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      Register\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Login\\Login.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Register\\Register.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\components\\Home.js",["87"],"import React, { Component, Fragment } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {\" \"}\r\n        <div className=\"mt-5 text-center\">\r\n          Welcome to MERN stack app. Please{\" \"}\r\n          <span className=\"text-info\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </span>{\" \"}\r\n          or{\" \"}\r\n          <span className=\"text-info\">\r\n            <Link to=\"/register\">Register</Link>\r\n          </span>{\" \"}\r\n          to see auth implementation.\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\store.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\index.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\authReducers.js",["88"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initState = { loading: false, isAuthenticated: false, user: {} };\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\reducers\\errorReducers.js",["89"],"import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\types.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\actions\\authActions.js",[],"D:\\react_projects\\mern_stack\\mern-frontend\\src\\utils\\authToken.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":16},{"ruleId":"94","severity":1,"message":"99","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":79,"column":60,"nodeType":"102","messageId":"103","endLine":79,"endColumn":62},{"ruleId":"100","severity":1,"message":"101","line":167,"column":60,"nodeType":"102","messageId":"103","endLine":167,"endColumn":62},{"ruleId":"100","severity":1,"message":"101","line":181,"column":60,"nodeType":"102","messageId":"103","endLine":181,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":9,"column":11,"nodeType":"106","endLine":9,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":26,"column":17,"nodeType":"106","endLine":26,"endColumn":77},{"ruleId":"104","severity":1,"message":"105","line":26,"column":17,"nodeType":"106","endLine":26,"endColumn":77},{"ruleId":"104","severity":1,"message":"105","line":33,"column":21,"nodeType":"106","endLine":33,"endColumn":81},{"ruleId":"104","severity":1,"message":"105","line":40,"column":21,"nodeType":"106","endLine":45,"endColumn":22},{"ruleId":"94","severity":1,"message":"109","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":7,"column":1,"nodeType":"112","endLine":23,"endColumn":2},{"ruleId":"110","severity":1,"message":"111","line":3,"column":1,"nodeType":"112","endLine":10,"endColumn":2},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'ViewTodos' is defined but never used.","Identifier","unusedVar","'EditTodo' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Route' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]